// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: uranium_internal.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "uranium_internal.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace uranium {
namespace internal {

namespace {

const ::google::protobuf::Descriptor* TableOptions_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TableOptions_reflection_ = NULL;
const ::google::protobuf::Descriptor* TableOptionsList_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TableOptionsList_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* TableStatus_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_uranium_5finternal_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_uranium_5finternal_2eproto() {
  protobuf_AddDesc_uranium_5finternal_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "uranium_internal.proto");
  GOOGLE_CHECK(file != NULL);
  TableOptions_descriptor_ = file->message_type(0);
  static const int TableOptions_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TableOptions, table_path_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TableOptions, status_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TableOptions, options_),
  };
  TableOptions_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      TableOptions_descriptor_,
      TableOptions::default_instance_,
      TableOptions_offsets_,
      -1,
      -1,
      -1,
      sizeof(TableOptions),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TableOptions, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TableOptions, _is_default_instance_));
  TableOptionsList_descriptor_ = file->message_type(1);
  static const int TableOptionsList_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TableOptionsList, options_list_),
  };
  TableOptionsList_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      TableOptionsList_descriptor_,
      TableOptionsList::default_instance_,
      TableOptionsList_offsets_,
      -1,
      -1,
      -1,
      sizeof(TableOptionsList),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TableOptionsList, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TableOptionsList, _is_default_instance_));
  TableStatus_descriptor_ = file->enum_type(0);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_uranium_5finternal_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      TableOptions_descriptor_, &TableOptions::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      TableOptionsList_descriptor_, &TableOptionsList::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_uranium_5finternal_2eproto() {
  delete TableOptions::default_instance_;
  delete TableOptions_reflection_;
  delete TableOptionsList::default_instance_;
  delete TableOptionsList_reflection_;
}

void protobuf_AddDesc_uranium_5finternal_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_uranium_5finternal_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::uranium::admin::protobuf_AddDesc_uranium_5fadmin_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\026uranium_internal.proto\022\020uranium.intern"
    "al\032\023uranium_admin.proto\"\177\n\014TableOptions\022"
    "\022\n\ntable_path\030\001 \001(\t\022-\n\006status\030\002 \001(\0162\035.ur"
    "anium.internal.TableStatus\022,\n\007options\030\003 "
    "\001(\0132\033.uranium.admin.TableOptions\"H\n\020Tabl"
    "eOptionsList\0224\n\014options_list\030\001 \003(\0132\036.ura"
    "nium.internal.TableOptions*4\n\013TableStatu"
    "s\022\t\n\005USING\020\000\022\014\n\010UPDATING\020\001\022\014\n\010REMOVING\020\002"
    "b\006proto3", 328);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "uranium_internal.proto", &protobuf_RegisterTypes);
  TableOptions::default_instance_ = new TableOptions();
  TableOptionsList::default_instance_ = new TableOptionsList();
  TableOptions::default_instance_->InitAsDefaultInstance();
  TableOptionsList::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_uranium_5finternal_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_uranium_5finternal_2eproto {
  StaticDescriptorInitializer_uranium_5finternal_2eproto() {
    protobuf_AddDesc_uranium_5finternal_2eproto();
  }
} static_descriptor_initializer_uranium_5finternal_2eproto_;
const ::google::protobuf::EnumDescriptor* TableStatus_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TableStatus_descriptor_;
}
bool TableStatus_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TableOptions::kTablePathFieldNumber;
const int TableOptions::kStatusFieldNumber;
const int TableOptions::kOptionsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TableOptions::TableOptions()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:uranium.internal.TableOptions)
}

void TableOptions::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  options_ = const_cast< ::uranium::admin::TableOptions*>(&::uranium::admin::TableOptions::default_instance());
}

TableOptions::TableOptions(const TableOptions& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:uranium.internal.TableOptions)
}

void TableOptions::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  table_path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  status_ = 0;
  options_ = NULL;
}

TableOptions::~TableOptions() {
  // @@protoc_insertion_point(destructor:uranium.internal.TableOptions)
  SharedDtor();
}

void TableOptions::SharedDtor() {
  table_path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete options_;
  }
}

void TableOptions::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TableOptions::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TableOptions_descriptor_;
}

const TableOptions& TableOptions::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_uranium_5finternal_2eproto();
  return *default_instance_;
}

TableOptions* TableOptions::default_instance_ = NULL;

TableOptions* TableOptions::New(::google::protobuf::Arena* arena) const {
  TableOptions* n = new TableOptions;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TableOptions::Clear() {
// @@protoc_insertion_point(message_clear_start:uranium.internal.TableOptions)
  table_path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  status_ = 0;
  if (GetArenaNoVirtual() == NULL && options_ != NULL) delete options_;
  options_ = NULL;
}

bool TableOptions::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:uranium.internal.TableOptions)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string table_path = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_table_path()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->table_path().data(), this->table_path().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "uranium.internal.TableOptions.table_path"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_status;
        break;
      }

      // optional .uranium.internal.TableStatus status = 2;
      case 2: {
        if (tag == 16) {
         parse_status:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_status(static_cast< ::uranium::internal::TableStatus >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_options;
        break;
      }

      // optional .uranium.admin.TableOptions options = 3;
      case 3: {
        if (tag == 26) {
         parse_options:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_options()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:uranium.internal.TableOptions)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:uranium.internal.TableOptions)
  return false;
#undef DO_
}

void TableOptions::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:uranium.internal.TableOptions)
  // optional string table_path = 1;
  if (this->table_path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->table_path().data(), this->table_path().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "uranium.internal.TableOptions.table_path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->table_path(), output);
  }

  // optional .uranium.internal.TableStatus status = 2;
  if (this->status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->status(), output);
  }

  // optional .uranium.admin.TableOptions options = 3;
  if (this->has_options()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->options_, output);
  }

  // @@protoc_insertion_point(serialize_end:uranium.internal.TableOptions)
}

::google::protobuf::uint8* TableOptions::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:uranium.internal.TableOptions)
  // optional string table_path = 1;
  if (this->table_path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->table_path().data(), this->table_path().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "uranium.internal.TableOptions.table_path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->table_path(), target);
  }

  // optional .uranium.internal.TableStatus status = 2;
  if (this->status() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->status(), target);
  }

  // optional .uranium.admin.TableOptions options = 3;
  if (this->has_options()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->options_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:uranium.internal.TableOptions)
  return target;
}

int TableOptions::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:uranium.internal.TableOptions)
  int total_size = 0;

  // optional string table_path = 1;
  if (this->table_path().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->table_path());
  }

  // optional .uranium.internal.TableStatus status = 2;
  if (this->status() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->status());
  }

  // optional .uranium.admin.TableOptions options = 3;
  if (this->has_options()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->options_);
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TableOptions::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:uranium.internal.TableOptions)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const TableOptions* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const TableOptions>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:uranium.internal.TableOptions)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:uranium.internal.TableOptions)
    MergeFrom(*source);
  }
}

void TableOptions::MergeFrom(const TableOptions& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:uranium.internal.TableOptions)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.table_path().size() > 0) {

    table_path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.table_path_);
  }
  if (from.status() != 0) {
    set_status(from.status());
  }
  if (from.has_options()) {
    mutable_options()->::uranium::admin::TableOptions::MergeFrom(from.options());
  }
}

void TableOptions::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:uranium.internal.TableOptions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TableOptions::CopyFrom(const TableOptions& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:uranium.internal.TableOptions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TableOptions::IsInitialized() const {

  return true;
}

void TableOptions::Swap(TableOptions* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TableOptions::InternalSwap(TableOptions* other) {
  table_path_.Swap(&other->table_path_);
  std::swap(status_, other->status_);
  std::swap(options_, other->options_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TableOptions::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TableOptions_descriptor_;
  metadata.reflection = TableOptions_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TableOptions

// optional string table_path = 1;
void TableOptions::clear_table_path() {
  table_path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& TableOptions::table_path() const {
  // @@protoc_insertion_point(field_get:uranium.internal.TableOptions.table_path)
  return table_path_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void TableOptions::set_table_path(const ::std::string& value) {
  
  table_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:uranium.internal.TableOptions.table_path)
}
 void TableOptions::set_table_path(const char* value) {
  
  table_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:uranium.internal.TableOptions.table_path)
}
 void TableOptions::set_table_path(const char* value, size_t size) {
  
  table_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:uranium.internal.TableOptions.table_path)
}
 ::std::string* TableOptions::mutable_table_path() {
  
  // @@protoc_insertion_point(field_mutable:uranium.internal.TableOptions.table_path)
  return table_path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* TableOptions::release_table_path() {
  // @@protoc_insertion_point(field_release:uranium.internal.TableOptions.table_path)
  
  return table_path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void TableOptions::set_allocated_table_path(::std::string* table_path) {
  if (table_path != NULL) {
    
  } else {
    
  }
  table_path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), table_path);
  // @@protoc_insertion_point(field_set_allocated:uranium.internal.TableOptions.table_path)
}

// optional .uranium.internal.TableStatus status = 2;
void TableOptions::clear_status() {
  status_ = 0;
}
 ::uranium::internal::TableStatus TableOptions::status() const {
  // @@protoc_insertion_point(field_get:uranium.internal.TableOptions.status)
  return static_cast< ::uranium::internal::TableStatus >(status_);
}
 void TableOptions::set_status(::uranium::internal::TableStatus value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:uranium.internal.TableOptions.status)
}

// optional .uranium.admin.TableOptions options = 3;
bool TableOptions::has_options() const {
  return !_is_default_instance_ && options_ != NULL;
}
void TableOptions::clear_options() {
  if (GetArenaNoVirtual() == NULL && options_ != NULL) delete options_;
  options_ = NULL;
}
const ::uranium::admin::TableOptions& TableOptions::options() const {
  // @@protoc_insertion_point(field_get:uranium.internal.TableOptions.options)
  return options_ != NULL ? *options_ : *default_instance_->options_;
}
::uranium::admin::TableOptions* TableOptions::mutable_options() {
  
  if (options_ == NULL) {
    options_ = new ::uranium::admin::TableOptions;
  }
  // @@protoc_insertion_point(field_mutable:uranium.internal.TableOptions.options)
  return options_;
}
::uranium::admin::TableOptions* TableOptions::release_options() {
  // @@protoc_insertion_point(field_release:uranium.internal.TableOptions.options)
  
  ::uranium::admin::TableOptions* temp = options_;
  options_ = NULL;
  return temp;
}
void TableOptions::set_allocated_options(::uranium::admin::TableOptions* options) {
  delete options_;
  options_ = options;
  if (options) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:uranium.internal.TableOptions.options)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TableOptionsList::kOptionsListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TableOptionsList::TableOptionsList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:uranium.internal.TableOptionsList)
}

void TableOptionsList::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

TableOptionsList::TableOptionsList(const TableOptionsList& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:uranium.internal.TableOptionsList)
}

void TableOptionsList::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

TableOptionsList::~TableOptionsList() {
  // @@protoc_insertion_point(destructor:uranium.internal.TableOptionsList)
  SharedDtor();
}

void TableOptionsList::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TableOptionsList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TableOptionsList::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TableOptionsList_descriptor_;
}

const TableOptionsList& TableOptionsList::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_uranium_5finternal_2eproto();
  return *default_instance_;
}

TableOptionsList* TableOptionsList::default_instance_ = NULL;

TableOptionsList* TableOptionsList::New(::google::protobuf::Arena* arena) const {
  TableOptionsList* n = new TableOptionsList;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TableOptionsList::Clear() {
// @@protoc_insertion_point(message_clear_start:uranium.internal.TableOptionsList)
  options_list_.Clear();
}

bool TableOptionsList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:uranium.internal.TableOptionsList)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .uranium.internal.TableOptions options_list = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_options_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_options_list()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_options_list;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:uranium.internal.TableOptionsList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:uranium.internal.TableOptionsList)
  return false;
#undef DO_
}

void TableOptionsList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:uranium.internal.TableOptionsList)
  // repeated .uranium.internal.TableOptions options_list = 1;
  for (unsigned int i = 0, n = this->options_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->options_list(i), output);
  }

  // @@protoc_insertion_point(serialize_end:uranium.internal.TableOptionsList)
}

::google::protobuf::uint8* TableOptionsList::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:uranium.internal.TableOptionsList)
  // repeated .uranium.internal.TableOptions options_list = 1;
  for (unsigned int i = 0, n = this->options_list_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->options_list(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:uranium.internal.TableOptionsList)
  return target;
}

int TableOptionsList::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:uranium.internal.TableOptionsList)
  int total_size = 0;

  // repeated .uranium.internal.TableOptions options_list = 1;
  total_size += 1 * this->options_list_size();
  for (int i = 0; i < this->options_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->options_list(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TableOptionsList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:uranium.internal.TableOptionsList)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const TableOptionsList* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const TableOptionsList>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:uranium.internal.TableOptionsList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:uranium.internal.TableOptionsList)
    MergeFrom(*source);
  }
}

void TableOptionsList::MergeFrom(const TableOptionsList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:uranium.internal.TableOptionsList)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  options_list_.MergeFrom(from.options_list_);
}

void TableOptionsList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:uranium.internal.TableOptionsList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TableOptionsList::CopyFrom(const TableOptionsList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:uranium.internal.TableOptionsList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TableOptionsList::IsInitialized() const {

  return true;
}

void TableOptionsList::Swap(TableOptionsList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TableOptionsList::InternalSwap(TableOptionsList* other) {
  options_list_.UnsafeArenaSwap(&other->options_list_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TableOptionsList::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TableOptionsList_descriptor_;
  metadata.reflection = TableOptionsList_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TableOptionsList

// repeated .uranium.internal.TableOptions options_list = 1;
int TableOptionsList::options_list_size() const {
  return options_list_.size();
}
void TableOptionsList::clear_options_list() {
  options_list_.Clear();
}
const ::uranium::internal::TableOptions& TableOptionsList::options_list(int index) const {
  // @@protoc_insertion_point(field_get:uranium.internal.TableOptionsList.options_list)
  return options_list_.Get(index);
}
::uranium::internal::TableOptions* TableOptionsList::mutable_options_list(int index) {
  // @@protoc_insertion_point(field_mutable:uranium.internal.TableOptionsList.options_list)
  return options_list_.Mutable(index);
}
::uranium::internal::TableOptions* TableOptionsList::add_options_list() {
  // @@protoc_insertion_point(field_add:uranium.internal.TableOptionsList.options_list)
  return options_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::uranium::internal::TableOptions >*
TableOptionsList::mutable_options_list() {
  // @@protoc_insertion_point(field_mutable_list:uranium.internal.TableOptionsList.options_list)
  return &options_list_;
}
const ::google::protobuf::RepeatedPtrField< ::uranium::internal::TableOptions >&
TableOptionsList::options_list() const {
  // @@protoc_insertion_point(field_list:uranium.internal.TableOptionsList.options_list)
  return options_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace internal
}  // namespace uranium

// @@protoc_insertion_point(global_scope)

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: uranium_internal.proto

#ifndef PROTOBUF_uranium_5finternal_2eproto__INCLUDED
#define PROTOBUF_uranium_5finternal_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "uranium_admin.pb.h"
// @@protoc_insertion_point(includes)

namespace uranium {
namespace internal {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_uranium_5finternal_2eproto();
void protobuf_AssignDesc_uranium_5finternal_2eproto();
void protobuf_ShutdownFile_uranium_5finternal_2eproto();

class TableOptions;
class TableOptionsList;

enum TableStatus {
  USING = 0,
  UPDATING = 1,
  REMOVING = 2,
  TableStatus_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  TableStatus_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool TableStatus_IsValid(int value);
const TableStatus TableStatus_MIN = USING;
const TableStatus TableStatus_MAX = REMOVING;
const int TableStatus_ARRAYSIZE = TableStatus_MAX + 1;

const ::google::protobuf::EnumDescriptor* TableStatus_descriptor();
inline const ::std::string& TableStatus_Name(TableStatus value) {
  return ::google::protobuf::internal::NameOfEnum(
    TableStatus_descriptor(), value);
}
inline bool TableStatus_Parse(
    const ::std::string& name, TableStatus* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TableStatus>(
    TableStatus_descriptor(), name, value);
}
// ===================================================================

class TableOptions : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:uranium.internal.TableOptions) */ {
 public:
  TableOptions();
  virtual ~TableOptions();

  TableOptions(const TableOptions& from);

  inline TableOptions& operator=(const TableOptions& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TableOptions& default_instance();

  void Swap(TableOptions* other);

  // implements Message ----------------------------------------------

  inline TableOptions* New() const { return New(NULL); }

  TableOptions* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TableOptions& from);
  void MergeFrom(const TableOptions& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(TableOptions* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string table_path = 1;
  void clear_table_path();
  static const int kTablePathFieldNumber = 1;
  const ::std::string& table_path() const;
  void set_table_path(const ::std::string& value);
  void set_table_path(const char* value);
  void set_table_path(const char* value, size_t size);
  ::std::string* mutable_table_path();
  ::std::string* release_table_path();
  void set_allocated_table_path(::std::string* table_path);

  // optional .uranium.internal.TableStatus status = 2;
  void clear_status();
  static const int kStatusFieldNumber = 2;
  ::uranium::internal::TableStatus status() const;
  void set_status(::uranium::internal::TableStatus value);

  // optional .uranium.admin.TableOptions options = 3;
  bool has_options() const;
  void clear_options();
  static const int kOptionsFieldNumber = 3;
  const ::uranium::admin::TableOptions& options() const;
  ::uranium::admin::TableOptions* mutable_options();
  ::uranium::admin::TableOptions* release_options();
  void set_allocated_options(::uranium::admin::TableOptions* options);

  // @@protoc_insertion_point(class_scope:uranium.internal.TableOptions)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr table_path_;
  ::uranium::admin::TableOptions* options_;
  int status_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_uranium_5finternal_2eproto();
  friend void protobuf_AssignDesc_uranium_5finternal_2eproto();
  friend void protobuf_ShutdownFile_uranium_5finternal_2eproto();

  void InitAsDefaultInstance();
  static TableOptions* default_instance_;
};
// -------------------------------------------------------------------

class TableOptionsList : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:uranium.internal.TableOptionsList) */ {
 public:
  TableOptionsList();
  virtual ~TableOptionsList();

  TableOptionsList(const TableOptionsList& from);

  inline TableOptionsList& operator=(const TableOptionsList& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TableOptionsList& default_instance();

  void Swap(TableOptionsList* other);

  // implements Message ----------------------------------------------

  inline TableOptionsList* New() const { return New(NULL); }

  TableOptionsList* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TableOptionsList& from);
  void MergeFrom(const TableOptionsList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(TableOptionsList* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .uranium.internal.TableOptions options_list = 1;
  int options_list_size() const;
  void clear_options_list();
  static const int kOptionsListFieldNumber = 1;
  const ::uranium::internal::TableOptions& options_list(int index) const;
  ::uranium::internal::TableOptions* mutable_options_list(int index);
  ::uranium::internal::TableOptions* add_options_list();
  ::google::protobuf::RepeatedPtrField< ::uranium::internal::TableOptions >*
      mutable_options_list();
  const ::google::protobuf::RepeatedPtrField< ::uranium::internal::TableOptions >&
      options_list() const;

  // @@protoc_insertion_point(class_scope:uranium.internal.TableOptionsList)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::RepeatedPtrField< ::uranium::internal::TableOptions > options_list_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_uranium_5finternal_2eproto();
  friend void protobuf_AssignDesc_uranium_5finternal_2eproto();
  friend void protobuf_ShutdownFile_uranium_5finternal_2eproto();

  void InitAsDefaultInstance();
  static TableOptionsList* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// TableOptions

// optional string table_path = 1;
inline void TableOptions::clear_table_path() {
  table_path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TableOptions::table_path() const {
  // @@protoc_insertion_point(field_get:uranium.internal.TableOptions.table_path)
  return table_path_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TableOptions::set_table_path(const ::std::string& value) {
  
  table_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:uranium.internal.TableOptions.table_path)
}
inline void TableOptions::set_table_path(const char* value) {
  
  table_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:uranium.internal.TableOptions.table_path)
}
inline void TableOptions::set_table_path(const char* value, size_t size) {
  
  table_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:uranium.internal.TableOptions.table_path)
}
inline ::std::string* TableOptions::mutable_table_path() {
  
  // @@protoc_insertion_point(field_mutable:uranium.internal.TableOptions.table_path)
  return table_path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TableOptions::release_table_path() {
  // @@protoc_insertion_point(field_release:uranium.internal.TableOptions.table_path)
  
  return table_path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TableOptions::set_allocated_table_path(::std::string* table_path) {
  if (table_path != NULL) {
    
  } else {
    
  }
  table_path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), table_path);
  // @@protoc_insertion_point(field_set_allocated:uranium.internal.TableOptions.table_path)
}

// optional .uranium.internal.TableStatus status = 2;
inline void TableOptions::clear_status() {
  status_ = 0;
}
inline ::uranium::internal::TableStatus TableOptions::status() const {
  // @@protoc_insertion_point(field_get:uranium.internal.TableOptions.status)
  return static_cast< ::uranium::internal::TableStatus >(status_);
}
inline void TableOptions::set_status(::uranium::internal::TableStatus value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:uranium.internal.TableOptions.status)
}

// optional .uranium.admin.TableOptions options = 3;
inline bool TableOptions::has_options() const {
  return !_is_default_instance_ && options_ != NULL;
}
inline void TableOptions::clear_options() {
  if (GetArenaNoVirtual() == NULL && options_ != NULL) delete options_;
  options_ = NULL;
}
inline const ::uranium::admin::TableOptions& TableOptions::options() const {
  // @@protoc_insertion_point(field_get:uranium.internal.TableOptions.options)
  return options_ != NULL ? *options_ : *default_instance_->options_;
}
inline ::uranium::admin::TableOptions* TableOptions::mutable_options() {
  
  if (options_ == NULL) {
    options_ = new ::uranium::admin::TableOptions;
  }
  // @@protoc_insertion_point(field_mutable:uranium.internal.TableOptions.options)
  return options_;
}
inline ::uranium::admin::TableOptions* TableOptions::release_options() {
  // @@protoc_insertion_point(field_release:uranium.internal.TableOptions.options)
  
  ::uranium::admin::TableOptions* temp = options_;
  options_ = NULL;
  return temp;
}
inline void TableOptions::set_allocated_options(::uranium::admin::TableOptions* options) {
  delete options_;
  options_ = options;
  if (options) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:uranium.internal.TableOptions.options)
}

// -------------------------------------------------------------------

// TableOptionsList

// repeated .uranium.internal.TableOptions options_list = 1;
inline int TableOptionsList::options_list_size() const {
  return options_list_.size();
}
inline void TableOptionsList::clear_options_list() {
  options_list_.Clear();
}
inline const ::uranium::internal::TableOptions& TableOptionsList::options_list(int index) const {
  // @@protoc_insertion_point(field_get:uranium.internal.TableOptionsList.options_list)
  return options_list_.Get(index);
}
inline ::uranium::internal::TableOptions* TableOptionsList::mutable_options_list(int index) {
  // @@protoc_insertion_point(field_mutable:uranium.internal.TableOptionsList.options_list)
  return options_list_.Mutable(index);
}
inline ::uranium::internal::TableOptions* TableOptionsList::add_options_list() {
  // @@protoc_insertion_point(field_add:uranium.internal.TableOptionsList.options_list)
  return options_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::uranium::internal::TableOptions >*
TableOptionsList::mutable_options_list() {
  // @@protoc_insertion_point(field_mutable_list:uranium.internal.TableOptionsList.options_list)
  return &options_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::uranium::internal::TableOptions >&
TableOptionsList::options_list() const {
  // @@protoc_insertion_point(field_list:uranium.internal.TableOptionsList.options_list)
  return options_list_;
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace internal
}  // namespace uranium

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::uranium::internal::TableStatus> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::uranium::internal::TableStatus>() {
  return ::uranium::internal::TableStatus_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_uranium_5finternal_2eproto__INCLUDED
